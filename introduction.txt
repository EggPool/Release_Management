A few words on release management and why it is neccessary:

Developing code and bringing it into a crypto-network that is already running as a production (live) network is compareable to running a big network like an ISP.
You are not only writing a program that runs locally, and if it doesn't work, you can probably stick to the old version and wait. the crypto-network has to be seen as a service itself and therefore, releasing bugged code means service impact for the customers (miners, users).
You are responsible to reduce service-impact near zero, otherwise your customers will start to complain, or worse, stop using your service (yes, it is also compareable to the normal capitalism market competition) and go to a competitior, which runs a more stable network.
At the end, not to speak that zero impact means less support for users, which means more time for development!
in terms of a crypto platform it becomes much more important, when others run services upon your platform. 
The following short explanations will provide a very safe process to ensure maximum quality. This is achieved by slowing down the release cycle and do proper testing before a release with different steps as follows:
link 
